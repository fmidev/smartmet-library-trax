# Isoband tests for problems which had to be debugged separately,
# saved in order not to repeat the same bugs.

interpolation linear

# Sliver
desliver 1
grid 3 3
0.03	0.01	0.01
0.07	0.07	0.1
0.03	0.03	0.02
coords
2984606.7724459544 8599903.399579236	2986673.687483066 8599837.70524504	2988740.559725644 8599771.34179859
2984541.4968953473 8597838.792004699	2986607.7436611652 8597773.140186904	2988673.9476739727 8597706.819689017
2984476.263583723 8595774.85186147	2986541.8425098 8595709.242518844	2988607.3787243348 8595642.964927843
isoband 0.07 inf POLYGON ((2986607.75 8597773,2988696.166668043 8598395.000042716,2988674 8597707,2988649.0624984517 8596932.999951944,2986607.75 8597773))

# Sliver issue

desliver 0
grid 2 2
0.07	0.23
0.01	0.02
coords
2633092.7236173553 9146969.500059871	2635345.292593883 9147022.050131973
2633145.601482105 9144719.520370334	2635397.3763982393 9144772.033379616
isoband 0.07 inf POLYGON ((2633092.75 9146970,2635345.25 9147022,2635385.0595241184 9145307.71427241,2633092.7500016377 9146969.99993015,2633092.75 9146970))

######################################################################
# Issue with slivers in radar data
# This demonstrates the need for using std::clamp in CellBuilder.cpp

bbox 0 0 10 20
grid 2 3
0.3	0.09
0.07	0.03
0.08	0.02
isoband 0.07 inf MULTIPOLYGON (((0 0,0 10,1.6666663562258002 0,0 0)),((0 10,0 20,10 20,10 16.66666625274554,0 10)))

######################################################################
# Issue with radar data

grid 3 4
0 0.05	0.15
0 0.07	0.03
0 0.07	0.06
0 0.07	0.06
coords
2160728.1798046087 8770007.740284838	2162842.0126428506 8770214.271661017	2164955.9821521835 8770420.109093767
2160934.790037228 8767896.362143386	2163047.929894511 8768102.756822713	2165161.2062876453 8768308.458009109
2161141.263547632 8765785.676021721	2163253.710873713 8765991.93413943	2165366.294600583 8766197.499214282
2161347.600471054 8763675.681470832	2163459.355715257 8763881.803161994	2165571.247225364 8764087.232259912
isoband 0.07 inf POLYGON ((2163048 8768103,2163264.800031501 8770255.200003069,2164956 8770420,2165092.833334395 8769011.999989072,2163048 8768103))

######################################################################
# Rounding issue if using floats
bbox 0 0 20 10
grid 3 2
0.20000000298023224     0.20000000298023224     0.20000000298023224
0                       0.10000000149011612     0.10000000149011612
isoband 0.2 0.5 GEOMETRYCOLLECTION EMPTY

######################################################################
# Horizontal lines

bbox 0 0 30 10
grid 4 2
0.1 0.1 0.1 0.1
0.2 0.2 0.2 0.1
isoband 0.1 0.2 POLYGON ((0 0,0 10,10 10,20 10,30 10,30 0,20 0,10 0,0 0))
isoband 0.2 0.5 GEOMETRYCOLLECTION EMPTY

######################################################################
# This one caused an infinite loop in alternate paths. The loop range was incorrect.
bbox 0 0 30 10
grid 4 2
10 5 10 0
0 0 0 0
isoband 5 6 MULTIPOLYGON (((0 5,0 6,8 10,10 10,0 5)),((10 10,12 10,20 6,24 10,25 10,20 5,10 10)))

######################################################################
# Encoutered with EC forecast, an unused joint. The -25 line separates
# the ring in the bottom row from the ring in the top two rows. Hence
# the first row join finds no matches at all, and the merge failed
# to update indices properly. For some reason this was the minimal
# test size that repeated the problem. Approximate shape of the rings:
#
#    /----
#    \___|
#    __
#    | \
#    +--+
#
# Below is a simplified version with scaled values and a bbox selected to produce
# integer coordinates for easier log analysis. The bug was in incorrect handling
# of the ranges to search when merging cells or rows.

bbox 0 0 40 90
grid 5 4
-30	-30	-30	-30	-30
-30	-10	-10	-10	-10
-25	-25	-25	-25	-25
-10	-10	-10	-20	-30
isoband -20 0 MULTIPOLYGON (((0 0,0 20,10 20,20 20,30 0,20 0,10 0,0 0)),((5 60,10 75,20 75,30 75,40 75,40 60,40 40,30 40,20 40,10 40,5 60)))
