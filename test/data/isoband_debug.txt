# Isoband tests for problems which had to be debugged separately,
# saved in order not to repeat the same bugs.

interpolation linear

######################################################################
# Horizontal lines

bbox 0 0 30 10
grid 4 2
0.1 0.1 0.1 0.1
0.2 0.2 0.2 0.1
isoband 0.1 0.2 POLYGON ((0 0,0 10,10 10,20 10,30 10,30 0,20 0,10 0,0 0))
isoband 0.2 0.5 GEOMETRYCOLLECTION EMPTY

######################################################################
# Hole not properly extracted

bbox 0 0 30 20
grid 4 3
	-31	-31	-29	-29
	-28.1	-28	-27	-29
	-27	-28.1	-28.8	-29
isoband -30 -28 POLYGON ((0 9.090909004211426,0 10,0 16.55172348022461,10 16.66666603088379,15 20,20 20,30 20,30 10,30 0,20 0,10 0,9.090909004211426 0,10 10,0 9.090909004211426),(10 10,20 4.44444465637207,25 10,20 15,10 10))

######################################################################
# Hole was not extracted properly from ECMWF data until finish_cell() was added.
# Also last triangle in case IHIA was generated so that H was not first vertex

bbox 0 0 30 30
grid 4 4
30	30	30	30
30	37	34	30
30	37	36	35.7
30 	30	35.8	37
isoband 34 36 POLYGON ((5.714285850524902 10,5.714285850524902 20,10 24.285715103149414,20 20,30 12.98245620727539,30 10,30 7.692307472229004,20 10,21.66666603088379 0,20 0,16.89655113220215 0,10 5.714285850524902,5.714285850524902 10),(8.571428298950195 10,10 8.571428298950195,20 10,13.333333015441895 20,10 21.428571701049805,8.571428298950195 20,8.571428298950195 10))

######################################################################
# This one caused an infinite loop in alternate paths. The loop range was incorrect.
bbox 0 0 30 10
grid 4 2
10 5 10 0
0 0 0 0
isoband 5 6 MULTIPOLYGON (((0 5,0 6,8 10,10 10,0 5)),((10 10,12 10,20 6,24 10,25 10,20 5,10 10)))

######################################################################
# Encoutered with EC forecast, an unused joint. The -25 line separates
# the ring in the bottom row from the ring in the top two rows. Hence
# the first row join finds no matches at all, and the merge failed
# to update indices properly. For some reason this was the minimal
# test size that repeated the problem. Approximate shape of the rings:
#
#    /----
#    \___|
#    __
#    | \
#    +--+
#
# Below is a simplified version with scaled values and a bbox selected to produce
# integer coordinates for easier log analysis. The bug was in incorrect handling
# of the ranges to search when merging cells or rows.

bbox 0 0 40 90
grid 5 4
-30	-30	-30	-30	-30
-30	-10	-10	-10	-10
-25	-25	-25	-25	-25
-10	-10	-10	-20	-30
isoband -20 0 MULTIPOLYGON (((0 0,0 20,10 20,20 20,30 0,20 0,10 0,0 0)),((5 60,10 75,20 75,30 75,40 75,40 60,40 40,30 40,20 40,10 40,5 60)))
